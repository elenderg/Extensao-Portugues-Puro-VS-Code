{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "PoP",
  "patterns": [
    {  "include": "#arguments"     },
    {  "include": "#constant"      },
    {  "include": "#comment"       },
    {  "include": "#entity"        },
    {  "include": "#function"      },
    {  "include": "#keyword"       },
    {  "include": "#meta"          },
    {  "include": "#numero"        },
    {  "include": "#operadores"    },
    {  "include": "#punctuation"   },
    {  "include": "#strings"       },
    {  "include": "#support"       },
    {  "include": "#variable"      }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {"match": "(\\[.*?\\])","name": "comment.block.pop"},
        {"match": "\\\\(.*)","name": "comment.line.character.pop"},
        {"match": "(\\(.*?\\))","name": "comment.block.documentation.pop"}
      ]
    },
    "strings": {
      "patterns": [
        {"name": "string.quoted.double.pop","begin": "\"","end": "\""}
      ]
    },
    "constant": {
      "patterns": [
        {"name": "constant.numeric.integer.decimal.pop",
          "match": "\\b(-?[\\d]+)\\b"},
        {"name": "constant.numeric.integer.hexadecimal.pop",
          "match": "(\\$[a-fA-F\\d]+)"},
        {"name": "constant.numeric.integer.float.decimal.pop",
          "match": "\\b(-?[\\d]+\\-[\\d]+/[\\d]+)\\b"},
        {"name": "constant.language.pop",
          "match": "\\b(?i:(sim|não|nulo|inexistente|em branco))\\b"}
      ]
    },
    "function": {
      "patterns": [
        {"name": "storage.type.function.Rotina.pop","match": "Rotina\\s*para\\s*que\\s*se"},
        {"name": "storage.type.function.Rotina.pop","match": "Função\\s*para\\s*que\\s*se"},
        {"name": "storage.type.function.Rotina.pop","match": "determine\\s*se"}
      ]
    },
    "keyword": {
      "patterns": [
        {"name": "keyword.language.artigos.definidos.pop",
          "match": "\\b(A|As|O|Os)\\b"},
        {"name": "keyword.language.artigos.indefinidos.pop",
          "match": "\\b(Um|Uns|Uma|Umas)\\b"},
        {"name": "variable.language.this.pop",
          "match": "\\b(?i:(deste|desta|destes|destas|dessa|dessas|desse|desses|dum|duma|dumas|duns|essa|essas|esse|esses|esta|estas|este|estes))\\b"},
        {"name": "string.other.parameters.begin.pop",
          "match": "\\b(a|as|o|os|um|uns|uma|umas)\\b"},
        {"name": "keyword.control.pop",
          "match": "\\b(?i:(desde|se))\\b|\\(referência\\)"},
        {"name": "keyword.control.adjetivos.pop",
          "match": "\\b(?i:(ativo|ativado|desativado|desligado|inativo|inativado|inexistente|ligado|nulo|original|próximo|vazia|vazias|vazio|vazios))\\b"},
        {"name": "keyword.control.preposicoes.pop",
          "match": "\\b(?i:(após|até|cima|com|como|dentre|depois|em|embaixo|entre|para|pela|pelas|pelo|pelos|por|sob|sobre|usando))\\b"},
        {"name": "keyword.control.verbos.pop",
          "match": "\\b(?i:(contendo|denominada|denominadas|denominado|denominados|diga|é|está|estão|estamos|estar|estiver|estiverem|foi|for|forem|itere|pare|poder|preserve|processe|puder|reitere|retornando|retorne|são|ser|serem|usando))\\b"},
        {"name": "keyword.control.punctuation.accessor.pop",
          "match": "\\b(?i:(à|às|ao|aos|na|nas|no|nos|num|numa|numas|nuns|pela|pelas|pelo|pelos))\\b"},
        {"name": "keyword.control.adverbios.pop",
          "match": "\\b(?i:(acima|abaixo|adiante|agora|ainda|ali|além|antes|apenas|assim|atrás|bem|cada|cerca de|certamente|certo|certos|certa|certas|conforme))\\b"},
        {"name": "keyword.control.substantivos.pop",
          "match": "\\b(?i:(baixo|cima|direita|direito|esquerda|esquerdo))\\b"},
        {"name": "keyword.control.operadoresaritmeticos.pop",
          "match": "\\b(?i:(dividido|e|mais|menos|multiplicado|nem|ou|vezes))\\b"},
        {"name": "keyword.other.operadoresdecomparacao.pop",
          "match": "\\b(?i:(igual a|maior do que|maior que|maior|mais|menor do que|menor que|menor))\\b"},
        {"name": "keyword.other.operadoresdeconcatenacao.pop",
          "match": "\\b(?i:(acompanhado de|junto com|seguido de))\\b"}
      ]
    },
    "punctuation": {"patterns": [{"name": "keyword.punctuation.terminator.pop","match": "\\;|\\.|\\,|\\:"}]},
    "support":{
      "patterns":[
        {
          "name": "support.type.ponteiro.pop",
          "match": "(?<=(é\\s+um)\\s+)\\b(ponteiro)\\b(?=\\s*\\b(para)\\b)"
        },
        {
          "name": "support.type.ponteiro.pop",
          "match": "(?<=(é\\s+um)\\s+)\\b(ponteiro)\\b(?=\\s*\\[)"
        },        
        {
          "name": "support.type.estrutura1.pop",
          "match": "(?<=(é\\s+uma)\\s+)\\b(estrutura)\\b(?=\\s*\\b(com)\\b)"
        },
        {
          "name": "support.type.estrutura2.pop",
          "match": "(?<=(é\\s+umas)\\s+)\\b(estruturas)\\b(?=\\s*\\b(com)\\b)"
        },
        {
          "name": "support.type.estrutura3.pop",
          "match": "(?<=(são\\s+uma)\\s+)\\b(estrutura)\\b(?=\\s*\\b(com)\\b)"
        },
        {
          "name": "support.type.estrutura4.pop",
          "match": "(?<=(são\\s+umas)\\s+)\\b(estruturas)\\b(?=\\s*\\b(com)\\b)"
        },
        {
          "name": "support.type.estrutura_nomeada.pop",
          "match": "(?<=(é\\s+um|é\\s+uma|é\\s+uns|é\\s+umas|são\\s+um|são\\s+umas|são\\s+uns|são\\s+umas)\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*\\b(com)\\b)"
        },        
        {
          "name": "support.type.primitive.singular.masculino.pop",
          "match": "(?<=(é\\s+um|são\\s+um)\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[))"
        },
        {
          "name": "support.type.primitive.singular.feminino.pop",
          "match": "(?<=(é\\s+uma|são\\s+uma)\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[))"
        },
        {
          "name": "support.type.plural.masculino.pop",
          "match": "(?<=(é\\s+uns|são\\s+uns)\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[))"
        },
        {
          "name": "support.type.plural.feminino.pop",
          "match": "(?<=(é\\s+umas|são\\s+umas)\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[))"
        },
        {
          "name": "support.type.membro_de_estrutura.pop",
          "match": "(?<=\\b(Um|Uma|Uns|Umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*\\b(denominado|denominada|denominados|denominadas)\\b)"
        },
        {
          "name": "support.type.membro_de_estrutura_nao_nomeado.pop",
          "match": "(?<=\\d\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[|\\,|\\b(e|ou)\\b))"
        },
        {
          "name": "support.type.uniontype.pop",
          "match": "(?<=\\b(Um|Uma|Uns|Umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*\\b(sob)\\b)"
        },
        {
          "name": "support.type.ponteiro_para_um_tipo.pop",
          "match": "(?<=\\b(para\\s+um|para\\s+uma|para\\s+uns|para\\s+umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[|\\,|\\b(e|ou)\\b))"
        },
        {
          "name": "support.type.generico.pop",
          "match": "(?<=\\b(um|uma|uns|umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\b(desde|sobre|usando|e|ou|para)\\b)\\s*)"
        },
        {
          "name": "support.type.global.pop",
          "match": "(?<=\\b(é um|é uma|é uns|é umas|são um|são umas|são uns|são umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s+(igual a)\\s+)"
        }
      ]
    },
    "meta":{
      "patterns":[
        {
          "name": "support.type.simples.pop",
          "match": "(?<=\\b(Um|Uma|Uns|Umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\-\\#\/ ]*?(?=\\s*\\b(é|são)\\b)"
        },
        {
          "name": "variable.other.structmember.pop",
          "match": "(?<=\\b(denominado|denominada|denominados|denominadas)\\b\\s+)[A-zÀ-ÿ_\\d\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\d\\-\\#\/ ]*?(?=\\s*(\\.|\\[|\\,|\\(|\\b(e|ou|sob)\\b))"
        },        
        {
          "name": "variable.other.unionmember.pop",
          "match": "(?<=\\b(sob o|sob a|sob os|sob as)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[\\wÀ-ÿ ]*?(?=\\s*(\\.|\\[|\\,|\\(|\\b(e|ou)\\b))"
        },
        {
          "name": "support.type.structmember.simple.pop",
          "match": "(?<=\\b(Um|Uma|Uns|Umas)\\b\\s+)[A-zÀ-ÿ_\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\d\\-\\#\/ ]*?(?=\\s*(\\.|\\[|\\,|\\(|\\b(e|ou|sob|denominado|denominada|denominados|denominadas)\\b))"
        },
        {
          "name": "variable.other.constant.colchete.pop",
          "match": "(?<=\\b(O|A|Os|As)\\b\\s+)[A-zÀ-ÿ_\\-\\'\\&\\@\\ƒŠŒŽœžŸ£µ\\#\/]*?\\s*[A-zÀ-ÿ_\\'\\d\\&\\@\\ƒŠŒŽœžŸ£µ\\-\\#\/ ]*?(?=\\s+(\\[))"
        },  
        {
          "name": "variable.other.constant.pop",
          "match": "(?<=\\b(O|A|Os|As)\\b\\s+)[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µŠŒŽ\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µ\\d\\-\\#\/ ]*?(?=\\s*(é um|é uma|é uns|é umas|são um|são umas|são uns|são umas)\\s+)"
        },
        {
          "name": "entity.name.function.withparameters.pop",
          "match": "(?<=\\b(para que se)\\b\\s+)[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µŠŒŽ\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µ\\d\\-\\#\/ ]*?(?=\\s*\\b(um|uma|uns|umas|dum|duma|duns|dumas|para|em|usando|com|desde|duma|duns|dumas|por)\\b\\s+)"
        },
        {
          "name": "entity.name.function.noparameters.pop",
          "match": "(?<=\\b(para que se)\\b\\s+)[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µŠŒŽ\\-\\#\/]*?\\s*[A-zÀ-ÿ_\\'\\&\\@\\ƒŠŒŽœžŸ£µ\\d\\-\\#\/ ]*?(?=\\s*(\\:|\\;))"
        }
        
      ]
    }    
  },
  "scopeName": "source.escopo.portugues"
}
